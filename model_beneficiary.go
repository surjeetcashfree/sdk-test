/*
Cashfree Payout APIs

Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites.

API version: 2024-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_payout

import (
	"encoding/json"
	"strings"
)

// checks if the Beneficiary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Beneficiary{}

// Beneficiary Contains the information of the created beneficiary
type Beneficiary struct {
	// It displays the unique ID you created to identify the beneficiary.
	BeneficiaryId *string `json:"beneficiary_id,omitempty"`
	// It displays the name of the beneficiary.
	BeneficaryName *string `json:"beneficary_name,omitempty"`
	BeneficiaryInstrumentDetails *BeneficiaryBeneficiaryInstrumentDetails `json:"beneficiary_instrument_details,omitempty"`
	BeneficiaryContactDetails *BeneficiaryBeneficiaryContactDetails `json:"beneficiary_contact_details,omitempty"`
	// It displays the current status of the beneficiary. Possible values are as follows - `VERIFIED`: Beneficiary is verified and is available for payouts - `INVALID`: Beneficiary is invalid - `INITIATED`: Beneficiary verification initiated - `CANCELLED`: Beneficiary verification cancelled - `FAILED`: Failed to verify beneficiary - `DELETED`: Beneficiary is deleted
	BeneficiaryStatus *string `json:"beneficiary_status,omitempty"`
	// It displays the time of the addition of the beneficiary in UTC.
	AddedOn *string `json:"added_on,omitempty"`
}


func (o Beneficiary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Beneficiary) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BeneficiaryId) {
		toSerialize["beneficiary_id"] = o.BeneficiaryId
	}
	if !IsNil(o.BeneficaryName) {
		toSerialize["beneficary_name"] = o.BeneficaryName
	}
	if !IsNil(o.BeneficiaryInstrumentDetails) {
		toSerialize["beneficiary_instrument_details"] = o.BeneficiaryInstrumentDetails
	}
	if !IsNil(o.BeneficiaryContactDetails) {
		toSerialize["beneficiary_contact_details"] = o.BeneficiaryContactDetails
	}
	if !IsNil(o.BeneficiaryStatus) {
		toSerialize["beneficiary_status"] = o.BeneficiaryStatus
	}
	if !IsNil(o.AddedOn) {
		toSerialize["added_on"] = o.AddedOn
	}
	return toSerialize, nil
}



