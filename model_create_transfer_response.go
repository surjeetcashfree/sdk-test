/*
Cashfree Payout APIs

Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites.

API version: 2024-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_payout

import (
	"encoding/json"
	"strings"
)

// checks if the CreateTransferResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTransferResponse{}

// CreateTransferResponse Standard Transfer V2 Response
type CreateTransferResponse struct {
	// It displays the unique ID you created to identify the transfer.
	TransferId *string `json:"transfer_id,omitempty"`
	// It displays the unique ID created by Cashfree Payments. You receive this ID in the response after initiating the standard transfer request.
	CfTransferId *string `json:"cf_transfer_id,omitempty"`
	// It displays the status of the transfer.
	Status *string `json:"status,omitempty"`
	BeneficiaryDetails *CreateTransferResponseBeneficiaryDetails `json:"beneficiary_details,omitempty"`
	// It displays the transfer amount initiated in the request.
	TransferAmount *float64 `json:"transfer_amount,omitempty"`
	// It displays the service charge applicable for the successful transfer request.
	TransferServiceCharge *float64 `json:"transfer_service_charge,omitempty"`
	// It displays the service tax applicable for the successful transfer request.
	TransferServiceTax *float64 `json:"transfer_service_tax,omitempty"`
	// It displays the mode of the transfer.
	TransferMode *string `json:"transfer_mode,omitempty"`
	// It displays the unique number that is generated to recognise any fund transfer that is created by the bank that facilitates the transfer.
	TransferUtr *string `json:"transfer_utr,omitempty"`
	// It displays the ID of the fund source from where the money was debited for this transfer request.
	FundsourceId *string `json:"fundsource_id,omitempty"`
	// It displays the time of when the transfer request was added to the system.
	AddedOn *string `json:"added_on,omitempty"`
	// It displays the updated time for the transfer.
	UpdatedOn *string `json:"updated_on,omitempty"`
}


func (o CreateTransferResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTransferResponse) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransferId) {
		toSerialize["transfer_id"] = o.TransferId
	}
	if !IsNil(o.CfTransferId) {
		toSerialize["cf_transfer_id"] = o.CfTransferId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.BeneficiaryDetails) {
		toSerialize["beneficiary_details"] = o.BeneficiaryDetails
	}
	if !IsNil(o.TransferAmount) {
		toSerialize["transfer_amount"] = o.TransferAmount
	}
	if !IsNil(o.TransferServiceCharge) {
		toSerialize["transfer_service_charge"] = o.TransferServiceCharge
	}
	if !IsNil(o.TransferServiceTax) {
		toSerialize["transfer_service_tax"] = o.TransferServiceTax
	}
	if !IsNil(o.TransferMode) {
		toSerialize["transfer_mode"] = o.TransferMode
	}
	if !IsNil(o.TransferUtr) {
		toSerialize["transfer_utr"] = o.TransferUtr
	}
	if !IsNil(o.FundsourceId) {
		toSerialize["fundsource_id"] = o.FundsourceId
	}
	if !IsNil(o.AddedOn) {
		toSerialize["added_on"] = o.AddedOn
	}
	if !IsNil(o.UpdatedOn) {
		toSerialize["updated_on"] = o.UpdatedOn
	}
	return toSerialize, nil
}



