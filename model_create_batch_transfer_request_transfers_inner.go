/*
Cashfree Payout APIs

Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites.

API version: 2024-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_payout

import (
	"encoding/json"
	"strings"
)

// checks if the CreateBatchTransferRequestTransfersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBatchTransferRequestTransfersInner{}

// CreateBatchTransferRequestTransfersInner struct for CreateBatchTransferRequestTransfersInner
type CreateBatchTransferRequestTransfersInner struct {
	// It is the unique ID you create to identify the transfer. You can use a maximum of 40 characters to create a transfer_id.  Alphanumeric and underscore ( _ ) are allowed.
	TransferId string `json:"transfer_id"`
	// It is the transfer amount. Decimal values are allowed. The minimum value should be equal to or greater than 1.00. (>= 1.00)
	TransferAmount float64 `json:"transfer_amount"`
	// It is the currency of the transfer amount. The default value is INR.
	TransferCurrency *string `json:"transfer_currency,omitempty"`
	// It is the mode of transfer. Allowed values are banktransfer, imps, neft, rtgs, upi, paytm, amazonpay, card. The default transfer_mode is banktransfer.
	TransferMode *string `json:"transfer_mode,omitempty"`
	BeneficiaryDetails *CreateBatchTransferRequestTransfersInnerBeneficiaryDetails `json:"beneficiary_details,omitempty"`
	// It can contain any additional remarks for the transfer. Alphanumeric and whitespaces are allowed. The maximum character limit is 70.
	TransferRemarks *string `json:"transfer_remarks,omitempty"`
	// It is the ID of the fund source from where you want to debit the transfer amount.
	FundsourceId *string `json:"fundsource_id,omitempty"`
}


func (o CreateBatchTransferRequestTransfersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBatchTransferRequestTransfersInner) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	toSerialize["transfer_id"] = o.TransferId
	toSerialize["transfer_amount"] = o.TransferAmount
	if !IsNil(o.TransferCurrency) {
		toSerialize["transfer_currency"] = o.TransferCurrency
	}
	if !IsNil(o.TransferMode) {
		toSerialize["transfer_mode"] = o.TransferMode
	}
	if !IsNil(o.BeneficiaryDetails) {
		toSerialize["beneficiary_details"] = o.BeneficiaryDetails
	}
	if !IsNil(o.TransferRemarks) {
		toSerialize["transfer_remarks"] = o.TransferRemarks
	}
	if !IsNil(o.FundsourceId) {
		toSerialize["fundsource_id"] = o.FundsourceId
	}
	return toSerialize, nil
}



