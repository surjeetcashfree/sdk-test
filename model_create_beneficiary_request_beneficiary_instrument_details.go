/*
Cashfree Payout APIs

Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites.

API version: 2024-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_payout

import (
	"encoding/json"
	"strings"
)

// checks if the CreateBeneficiaryRequestBeneficiaryInstrumentDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBeneficiaryRequestBeneficiaryInstrumentDetails{}

// CreateBeneficiaryRequestBeneficiaryInstrumentDetails Beneficiary instrument details
type CreateBeneficiaryRequestBeneficiaryInstrumentDetails struct {
	// It is the beneficiary bank account number. The value should be between 9 and 18 characters. Alphanumeric characters are allowed. You need to input bank_ifsc if bank_account_number is passed.
	BankAccountNumber *string `json:"bank_account_number,omitempty"`
	// It is the IFSC information of the beneficiary's bank account in the standard IFSC format. The value should be 11 characters. (The first 4 characters should be alphabets, the 5th character should be a 0, and the remaining 6 characters should be numerals.). You need to input bank_account_number if bank_ifsc is passed.
	BankIfsc *string `json:"bank_ifsc,omitempty"`
	// It is the UPI VPA information of the beneficiary. Only valid UPI VPA information is accepted. It can be an Alphanumeric value with only period (.), hyphen (-), underscore ( _ ), and at the rate of (@). Hyphen (-) is accepted only before at the rate of (@).
	Vpa *string `json:"vpa,omitempty"`
}


func (o CreateBeneficiaryRequestBeneficiaryInstrumentDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBeneficiaryRequestBeneficiaryInstrumentDetails) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BankAccountNumber) {
		toSerialize["bank_account_number"] = o.BankAccountNumber
	}
	if !IsNil(o.BankIfsc) {
		toSerialize["bank_ifsc"] = o.BankIfsc
	}
	if !IsNil(o.Vpa) {
		toSerialize["vpa"] = o.Vpa
	}
	return toSerialize, nil
}



