/*
Cashfree Payout APIs

Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites.

API version: 2024-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_payout

import (
	"encoding/json"
	"strings"
)

// checks if the BeneficiaryBeneficiaryContactDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BeneficiaryBeneficiaryContactDetails{}

// BeneficiaryBeneficiaryContactDetails It displays the contact details of the beneficiary.
type BeneficiaryBeneficiaryContactDetails struct {
	// It displays the email address of the beneficiary.
	BeneficiaryEmail *string `json:"beneficiary_email,omitempty"`
	// It displays the phone number of the beneficiary without the country code.
	BeneficiaryPhone *string `json:"beneficiary_phone,omitempty"`
	// It displays the country code of the beneficiary's phone number.
	BeneficiaryCountryCode *string `json:"beneficiary_country_code,omitempty"`
	// It displays the address of the beneficiary.
	BeneficiaryAddress *string `json:"beneficiary_address,omitempty"`
	// It displays the name of the city as present in the beneficiary's address.
	BeneficiaryCity *string `json:"beneficiary_city,omitempty"`
	// It displays the name of the state as present in the beneficiary's address.
	BeneficiaryState *string `json:"beneficiary_state,omitempty"`
	// It displays the PIN code as present in the beneficiary's address.
	BeneficiaryPostalCode *string `json:"beneficiary_postal_code,omitempty"`
}


func (o BeneficiaryBeneficiaryContactDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BeneficiaryBeneficiaryContactDetails) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BeneficiaryEmail) {
		toSerialize["beneficiary_email"] = o.BeneficiaryEmail
	}
	if !IsNil(o.BeneficiaryPhone) {
		toSerialize["beneficiary_phone"] = o.BeneficiaryPhone
	}
	if !IsNil(o.BeneficiaryCountryCode) {
		toSerialize["beneficiary_country_code"] = o.BeneficiaryCountryCode
	}
	if !IsNil(o.BeneficiaryAddress) {
		toSerialize["beneficiary_address"] = o.BeneficiaryAddress
	}
	if !IsNil(o.BeneficiaryCity) {
		toSerialize["beneficiary_city"] = o.BeneficiaryCity
	}
	if !IsNil(o.BeneficiaryState) {
		toSerialize["beneficiary_state"] = o.BeneficiaryState
	}
	if !IsNil(o.BeneficiaryPostalCode) {
		toSerialize["beneficiary_postal_code"] = o.BeneficiaryPostalCode
	}
	return toSerialize, nil
}



